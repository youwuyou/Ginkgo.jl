import{_ as r,C as p,c as a,o as g,j as t,a as i,aA as l,G as o,w as n}from"./chunks/framework.CpviZE8M.js";const pe=JSON.parse('{"title":"Low-level API","description":"","frontmatter":{},"headers":[],"relativePath":"reference/low-level-api.md","filePath":"reference/low-level-api.md","lastUpdated":null}'),d={name:"reference/low-level-api.md"},u={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ee={class:"jldocstring custom-block",open:""};function te(se,e,oe,ie,ne,le){const s=p("Badge");return g(),a("div",null,[e[172]||(e[172]=t("h1",{id:"Low-level-API",tabindex:"-1"},[i("Low-level API "),t("a",{class:"header-anchor",href:"#Low-level-API","aria-label":'Permalink to "Low-level API {#Low-level-API}"'},"â€‹")],-1)),e[173]||(e[173]=t("p",null,[i("The "),t("code",null,"Ginkgo.API"),i(" submodule provides a low-level interface which closely matches the Ginkgo C API. While these functions are not intended for general usage, they are useful for calling Ginkgo routines not yet available in "),t("code",null,"Ginkgo.jl"),i(" main interface, and is the basis for the high-level wrappers. For illustrative purpose, we use a example "),t("code",null,"api.jl"),i(" here, yet to be replaced.")],-1)),t("details",u,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Ginkgo.API.ginkgo_deferred_factory_parameter_delete-Tuple{Any}",href:"#Ginkgo.API.ginkgo_deferred_factory_parameter_delete-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_deferred_factory_parameter_delete")],-1)),e[1]||(e[1]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[3]||(e[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_deferred_factory_parameter_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dfp_st_ptr)</span></span></code></pre></div><p>Deallocates memory for a ginkgo deferred factory parameter object.</p><p><strong>Arguments</strong></p><ul><li><code>dfp_st_ptr</code>: Raw pointer to the shared pointer of the deferred factory parameter object to be deleted</li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L890-L897",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",_,[t("summary",null,[e[4]||(e[4]=t("a",{id:"Ginkgo.API.ginkgo_dim2_cols_get-Tuple{Any}",href:"#Ginkgo.API.ginkgo_dim2_cols_get-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_dim2_cols_get")],-1)),e[5]||(e[5]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[7]||(e[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_dim2_cols_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dim)</span></span></code></pre></div><p>Obtains the value of the second element of a gko::dim&lt;2&gt; type</p><p><strong>Arguments</strong></p><ul><li><code>dim</code>: An object of <a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_dim2_st"><code>gko_dim2_st</code></a> type</li></ul><p><strong>Returns</strong></p><p>size_t Second dimension</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[6]||(e[6]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L71-L80",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",c,[t("summary",null,[e[8]||(e[8]=t("a",{id:"Ginkgo.API.ginkgo_dim2_create-Tuple{Any, Any}",href:"#Ginkgo.API.ginkgo_dim2_create-Tuple{Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_dim2_create")],-1)),e[9]||(e[9]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[11]||(e[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_dim2_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rows, cols)</span></span></code></pre></div><p>Allocates memory for a C-based reimplementation of the gko::dim&lt;2&gt; type</p><p><strong>Arguments</strong></p><ul><li><p><code>rows</code>: First dimension</p></li><li><p><code>cols</code>: Second dimension</p></li></ul><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_dim2_st"><code>gko_dim2_st</code></a> C struct that contains members of the gko::dim&lt;2&gt; type</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[10]||(e[10]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L42-L52",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",k,[t("summary",null,[e[12]||(e[12]=t("a",{id:"Ginkgo.API.ginkgo_dim2_rows_get-Tuple{Any}",href:"#Ginkgo.API.ginkgo_dim2_rows_get-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_dim2_rows_get")],-1)),e[13]||(e[13]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[15]||(e[15]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_dim2_rows_get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dim)</span></span></code></pre></div><p>Obtains the value of the first element of a gko::dim&lt;2&gt; type</p><p><strong>Arguments</strong></p><ul><li><code>dim</code>: An object of <a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_dim2_st"><code>gko_dim2_st</code></a> type</li></ul><p><strong>Returns</strong></p><p>size_t First dimension</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[14]||(e[14]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L57-L66",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",b,[t("summary",null,[e[16]||(e[16]=t("a",{id:"Ginkgo.API.ginkgo_executor_cpu_get_num_cores-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_cpu_get_num_cores-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_cpu_get_num_cores")],-1)),e[17]||(e[17]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[19]||(e[19]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_cpu_get_num_cores</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of cores of the CPU associated to this executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of cores</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[18]||(e[18]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L162-L171",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",h,[t("summary",null,[e[20]||(e[20]=t("a",{id:"Ginkgo.API.ginkgo_executor_cpu_get_num_threads_per_core-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_cpu_get_num_threads_per_core-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_cpu_get_num_threads_per_core")],-1)),e[21]||(e[21]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[23]||(e[23]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_cpu_get_num_threads_per_core</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of threads per core of the CPU associated to this executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of threads per core</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[22]||(e[22]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L176-L185",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",f,[t("summary",null,[e[24]||(e[24]=t("a",{id:"Ginkgo.API.ginkgo_executor_cuda_create-Tuple{Any, Any}",href:"#Ginkgo.API.ginkgo_executor_cuda_create-Tuple{Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_cuda_create")],-1)),e[25]||(e[25]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[27]||(e[27]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_cuda_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device_id, exec_st_ptr)</span></span></code></pre></div><p>Create a CUDA executor</p><p><strong>Arguments</strong></p><ul><li><p><code>device_id</code>: Device id</p></li><li><p><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the master executor</p></li></ul><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the CUDA executor created</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[26]||(e[26]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L204-L214",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",y,[t("summary",null,[e[28]||(e[28]=t("a",{id:"Ginkgo.API.ginkgo_executor_cuda_get_num_devices-Tuple{}",href:"#Ginkgo.API.ginkgo_executor_cuda_get_num_devices-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_cuda_get_num_devices")],-1)),e[29]||(e[29]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[31]||(e[31]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_cuda_get_num_devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Get the number of devices of this CUDA executor.</p><p><strong>Returns</strong></p><p>size_t No. of devices</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[30]||(e[30]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L220-L227",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",m,[t("summary",null,[e[32]||(e[32]=t("a",{id:"Ginkgo.API.ginkgo_executor_delete-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_delete-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_delete")],-1)),e[33]||(e[33]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[35]||(e[35]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Deallocates memory for an executor on targeted device.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the executor to be deleted</li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[34]||(e[34]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L85-L92",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",j,[t("summary",null,[e[36]||(e[36]=t("a",{id:"Ginkgo.API.ginkgo_executor_dpcpp_create-Tuple{Any, Any}",href:"#Ginkgo.API.ginkgo_executor_dpcpp_create-Tuple{Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_dpcpp_create")],-1)),e[37]||(e[37]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[39]||(e[39]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_dpcpp_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device_id, exec_st_ptr)</span></span></code></pre></div><p>Create a DPCPP executor</p><p><strong>Arguments</strong></p><ul><li><p><code>device_id</code>: Device id</p></li><li><p><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the master executor</p></li></ul><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the DPCPP executor created</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[38]||(e[38]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L358-L368",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",A,[t("summary",null,[e[40]||(e[40]=t("a",{id:"Ginkgo.API.ginkgo_executor_dpcpp_get_num_devices-Tuple{}",href:"#Ginkgo.API.ginkgo_executor_dpcpp_get_num_devices-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_dpcpp_get_num_devices")],-1)),e[41]||(e[41]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[43]||(e[43]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_dpcpp_get_num_devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Get the number of devices of this DPCPP executor.</p><p><strong>Returns</strong></p><p>size_t No. of devices</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[42]||(e[42]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L374-L381",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",x,[t("summary",null,[e[44]||(e[44]=t("a",{id:"Ginkgo.API.ginkgo_executor_get_master-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_get_master-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_get_master")],-1)),e[45]||(e[45]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[47]||(e[47]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_get_master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Returns the master OmpExecutor of this Executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the current executor</li></ul><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the master executor</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[46]||(e[46]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L97-L106",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",T,[t("summary",null,[e[48]||(e[48]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_get_device_id-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_get_device_id-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_get_device_id")],-1)),e[49]||(e[49]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[51]||(e[51]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_get_device_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the device id of the device associated to this executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the executor</li></ul><p><strong>Returns</strong></p><p>size_t Device id</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[50]||(e[50]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L190-L199",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",v,[t("summary",null,[e[52]||(e[52]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_item_get_max_subgroup_size-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_item_get_max_subgroup_size-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_item_get_max_subgroup_size")],-1)),e[53]||(e[53]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[55]||(e[55]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_item_get_max_subgroup_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of subgroups of this item-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the item-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of subgroups</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[54]||(e[54]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L386-L395",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",P,[t("summary",null,[e[56]||(e[56]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_item_get_max_workgroup_size-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_item_get_max_workgroup_size-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_item_get_max_workgroup_size")],-1)),e[57]||(e[57]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[59]||(e[59]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_item_get_max_workgroup_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of workgroups of this item-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the item-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of workgroups</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[58]||(e[58]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L400-L409",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",C,[t("summary",null,[e[60]||(e[60]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_item_get_num_computing_units-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_item_get_num_computing_units-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_item_get_num_computing_units")],-1)),e[61]||(e[61]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[63]||(e[63]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_item_get_num_computing_units</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of computing units of this item-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the item-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of computing units</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[62]||(e[62]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L414-L423",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",I,[t("summary",null,[e[64]||(e[64]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_closest_numa-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_closest_numa-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_closest_numa")],-1)),e[65]||(e[65]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[67]||(e[67]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_closest_numa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the closest NUMA node.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of the closest NUMA node</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[66]||(e[66]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L344-L353",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",G,[t("summary",null,[e[68]||(e[68]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_major_version-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_major_version-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_major_version")],-1)),e[69]||(e[69]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[71]||(e[71]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_major_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the major version of compute capability.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t The major version of compute capability</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[70]||(e[70]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L316-L325",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",E,[t("summary",null,[e[72]||(e[72]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_minor_version-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_minor_version-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_minor_version")],-1)),e[73]||(e[73]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[75]||(e[75]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_minor_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the minor version of compute capability.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t The minor version of compute capability</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[74]||(e[74]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L330-L339",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",w,[t("summary",null,[e[76]||(e[76]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_multiprocessor-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_num_multiprocessor-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_multiprocessor")],-1)),e[77]||(e[77]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[79]||(e[79]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_num_multiprocessor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of multiprocessors of this thread-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. multiprocessors</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[78]||(e[78]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L260-L269",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",S,[t("summary",null,[e[80]||(e[80]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps")],-1)),e[81]||(e[81]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[83]||(e[83]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_num_warps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of warps of this thread-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of warps</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[82]||(e[82]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L288-L297",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",R,[t("summary",null,[e[84]||(e[84]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps_per_sm-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps_per_sm-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_num_warps_per_sm")],-1)),e[85]||(e[85]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[87]||(e[87]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_num_warps_per_sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the number of warps per SM of this thread-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t No. of warps per SM</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[86]||(e[86]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L274-L283",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",L,[t("summary",null,[e[88]||(e[88]=t("a",{id:"Ginkgo.API.ginkgo_executor_gpu_thread_get_warp_size-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_gpu_thread_get_warp_size-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_gpu_thread_get_warp_size")],-1)),e[89]||(e[89]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[91]||(e[91]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_gpu_thread_get_warp_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Get the warp size of this thread-based executor.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the thread-based executor</li></ul><p><strong>Returns</strong></p><p>size_t The warp size of this executor</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[90]||(e[90]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L302-L311",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",V,[t("summary",null,[e[92]||(e[92]=t("a",{id:"Ginkgo.API.ginkgo_executor_hip_create-Tuple{Any, Any}",href:"#Ginkgo.API.ginkgo_executor_hip_create-Tuple{Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_hip_create")],-1)),e[93]||(e[93]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[95]||(e[95]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_hip_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device_id, exec_st_ptr)</span></span></code></pre></div><p>Create a HIP executor</p><p><strong>Arguments</strong></p><ul><li><p><code>device_id</code>: Device id</p></li><li><p><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the master executor</p></li></ul><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the HIP executor created</p>',6)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[94]||(e[94]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L232-L242",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",M,[t("summary",null,[e[96]||(e[96]=t("a",{id:"Ginkgo.API.ginkgo_executor_hip_get_num_devices-Tuple{}",href:"#Ginkgo.API.ginkgo_executor_hip_get_num_devices-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_hip_get_num_devices")],-1)),e[97]||(e[97]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[99]||(e[99]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_hip_get_num_devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Get the number of devices of this HIP executor.</p><p><strong>Returns</strong></p><p>size_t No. of devices</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[98]||(e[98]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L248-L255",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",F,[t("summary",null,[e[100]||(e[100]=t("a",{id:"Ginkgo.API.ginkgo_executor_memory_accessible-Tuple{Any, Any}",href:"#Ginkgo.API.ginkgo_executor_memory_accessible-Tuple{Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_memory_accessible")],-1)),e[101]||(e[101]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[103]||(e[103]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_memory_accessible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr, other_exec_st_ptr)</span></span></code></pre></div><p>Verifies whether the executors share the same memory.</p><p><strong>Arguments</strong></p><ul><li><p><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the current executor</p></li><li><p><code>other_exec_st_ptr</code>: Raw pointer to the shared pointer of the other executor</p></li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[102]||(e[102]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L111-L119",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",N,[t("summary",null,[e[104]||(e[104]=t("a",{id:"Ginkgo.API.ginkgo_executor_omp_create-Tuple{}",href:"#Ginkgo.API.ginkgo_executor_omp_create-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_omp_create")],-1)),e[105]||(e[105]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[107]||(e[107]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_omp_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Create an OMP executor</p><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the OMP executor created</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[106]||(e[106]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L137-L144",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",O,[t("summary",null,[e[108]||(e[108]=t("a",{id:"Ginkgo.API.ginkgo_executor_reference_create-Tuple{}",href:"#Ginkgo.API.ginkgo_executor_reference_create-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_reference_create")],-1)),e[109]||(e[109]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[111]||(e[111]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_reference_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Create a reference executor</p><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor"><code>gko_executor</code></a> Raw pointer to the shared pointer of the reference executor created</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[110]||(e[110]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L150-L157",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",D,[t("summary",null,[e[112]||(e[112]=t("a",{id:"Ginkgo.API.ginkgo_executor_synchronize-Tuple{Any}",href:"#Ginkgo.API.ginkgo_executor_synchronize-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_executor_synchronize")],-1)),e[113]||(e[113]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[115]||(e[115]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_executor_synchronize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exec_st_ptr)</span></span></code></pre></div><p>Synchronize the operations launched on the executor with its master.</p><p><strong>Arguments</strong></p><ul><li><code>exec_st_ptr</code>: Raw pointer to the shared pointer of the current executor</li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[114]||(e[114]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L124-L131",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",B,[t("summary",null,[e[116]||(e[116]=t("a",{id:"Ginkgo.API.ginkgo_linop_apply-Tuple{Any, Any, Any}",href:"#Ginkgo.API.ginkgo_linop_apply-Tuple{Any, Any, Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_linop_apply")],-1)),e[117]||(e[117]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[119]||(e[119]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_linop_apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A_st_ptr, b_st_ptr, x_st_ptr)</span></span></code></pre></div><p>Applies a linear operator to a vector (or a sequence of vectors).</p><p><strong>Arguments</strong></p><ul><li><p><code>A_st_ptr</code>: Raw pointer to the shared pointer of the LinOp object</p></li><li><p><code>b_st_ptr</code>: Raw pointer to the shared pointer of the input vector(s) on which the operator is applied</p></li><li><p><code>x_st_ptr</code>: Raw pointer to the shared pointer of the output vector where the result is stored</p></li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[118]||(e[118]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L953-L962",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",z,[t("summary",null,[e[120]||(e[120]=t("a",{id:"Ginkgo.API.ginkgo_linop_delete-Tuple{Any}",href:"#Ginkgo.API.ginkgo_linop_delete-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_linop_delete")],-1)),e[121]||(e[121]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[123]||(e[123]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_linop_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(linop_st_ptr)</span></span></code></pre></div><p>Deallocates memory for a ginkgo LinOp object.</p><p><strong>Arguments</strong></p><ul><li><code>linop_st_ptr</code>: Raw pointer to the shared pointer of the LinOp object to be deleted</li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[122]||(e[122]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L941-L948",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",U,[t("summary",null,[e[124]||(e[124]=t("a",{id:"Ginkgo.API.ginkgo_log_convergence_f32_delete-Tuple{Any}",href:"#Ginkgo.API.ginkgo_log_convergence_f32_delete-Tuple{Any}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_log_convergence_f32_delete")],-1)),e[125]||(e[125]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[127]||(e[127]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_log_convergence_f32_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(log_conv_st_ptr)</span></span></code></pre></div><p>Deallocates memory for a ginkgo logger object.</p><p><strong>Arguments</strong></p><ul><li><code>log_conv_st_ptr</code>: Raw pointer to the shared pointer of the logger object to be deleted</li></ul>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[126]||(e[126]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L1021-L1028",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",$,[t("summary",null,[e[128]||(e[128]=t("a",{id:"Ginkgo.API.ginkgo_preconditioner_none_create-Tuple{}",href:"#Ginkgo.API.ginkgo_preconditioner_none_create-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_preconditioner_none_create")],-1)),e[129]||(e[129]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[131]||(e[131]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_preconditioner_none_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Create a deferred factory parameter for an empty preconditioner</p><p><strong>Returns</strong></p><p><a href="/previews/PR35/reference/low-level-api#Ginkgo.API.gko_deferred_factory_parameter"><code>gko_deferred_factory_parameter</code></a> Raw pointer to the shared pointer of the none preconditioner created</p>',4)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[130]||(e[130]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L903-L910",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",H,[t("summary",null,[e[132]||(e[132]=t("a",{id:"Ginkgo.API.ginkgo_version_print-Tuple{}",href:"#Ginkgo.API.ginkgo_version_print-Tuple{}"},[t("span",{class:"jlbinding"},"Ginkgo.API.ginkgo_version_print")],-1)),e[133]||(e[133]=i()),o(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[135]||(e[135]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ginkgo_version_print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>This function is a wrapper for printing the version of the ginkgo library</p>',2)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[134]||(e[134]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L33-L37",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",q,[t("summary",null,[e[136]||(e[136]=t("a",{id:"Ginkgo.API.gko_deferred_factory_parameter",href:"#Ginkgo.API.gko_deferred_factory_parameter"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_deferred_factory_parameter")],-1)),e[137]||(e[137]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[139]||(e[139]=t("p",null,[i("Type of the pointer to the wrapped "),t("a",{href:"/previews/PR35/reference/low-level-api#Ginkgo.API.gko_deferred_factory_parameter_st"},[t("code",null,"gko_deferred_factory_parameter_st")]),i(" struct")],-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[138]||(e[138]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L885-L887",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",J,[t("summary",null,[e[140]||(e[140]=t("a",{id:"Ginkgo.API.gko_deferred_factory_parameter_st",href:"#Ginkgo.API.gko_deferred_factory_parameter_st"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_deferred_factory_parameter_st")],-1)),e[141]||(e[141]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[143]||(e[143]=t("p",null,"Struct containing the shared pointer to a ginkgo deferred factory parameter",-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[142]||(e[142]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L880-L882",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",W,[t("summary",null,[e[144]||(e[144]=t("a",{id:"Ginkgo.API.gko_dim2_st",href:"#Ginkgo.API.gko_dim2_st"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_dim2_st")],-1)),e[145]||(e[145]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[147]||(e[147]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gko_dim2_st</span></span></code></pre></div><p>Struct implements the gko::dim&lt;2&gt; type</p>',2)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[146]||(e[146]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L18-L22",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",K,[t("summary",null,[e[148]||(e[148]=t("a",{id:"Ginkgo.API.gko_executor",href:"#Ginkgo.API.gko_executor"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_executor")],-1)),e[149]||(e[149]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[151]||(e[151]=t("p",null,[i("Type of the pointer to the wrapped "),t("a",{href:"/previews/PR35/reference/low-level-api#Ginkgo.API.gko_executor_st"},[t("code",null,"gko_executor_st")]),i(" struct")],-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[150]||(e[150]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L13-L15",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Q,[t("summary",null,[e[152]||(e[152]=t("a",{id:"Ginkgo.API.gko_executor_st",href:"#Ginkgo.API.gko_executor_st"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_executor_st")],-1)),e[153]||(e[153]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[155]||(e[155]=t("p",null,"Struct containing the shared pointer to a ginkgo executor",-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[154]||(e[154]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L8-L10",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",X,[t("summary",null,[e[156]||(e[156]=t("a",{id:"Ginkgo.API.gko_linop",href:"#Ginkgo.API.gko_linop"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_linop")],-1)),e[157]||(e[157]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[159]||(e[159]=t("p",null,[i("Type of the pointer to the wrapped "),t("a",{href:"/previews/PR35/reference/low-level-api#Ginkgo.API.gko_linop_st"},[t("code",null,"gko_linop_st")]),i(" struct")],-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[158]||(e[158]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L936-L938",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Y,[t("summary",null,[e[160]||(e[160]=t("a",{id:"Ginkgo.API.gko_linop_st",href:"#Ginkgo.API.gko_linop_st"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_linop_st")],-1)),e[161]||(e[161]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[163]||(e[163]=t("p",null,"Struct containing the shared pointer to a ginkgo LinOp object",-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[162]||(e[162]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L931-L933",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Z,[t("summary",null,[e[164]||(e[164]=t("a",{id:"Ginkgo.API.gko_log_convergence_f32",href:"#Ginkgo.API.gko_log_convergence_f32"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_log_convergence_f32")],-1)),e[165]||(e[165]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[167]||(e[167]=t("p",null,[i("Type of the pointer to the wrapped "),t("code",null,"gko_log_convergence_st"),i(" struct")],-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[166]||(e[166]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L1014-L1016",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",ee,[t("summary",null,[e[168]||(e[168]=t("a",{id:"Ginkgo.API.gko_log_convergence_f32_st",href:"#Ginkgo.API.gko_log_convergence_f32_st"},[t("span",{class:"jlbinding"},"Ginkgo.API.gko_log_convergence_f32_st")],-1)),e[169]||(e[169]=i()),o(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[171]||(e[171]=t("p",null,"Struct containing the shared pointer to a ginkgo logger object",-1)),o(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[170]||(e[170]=[t("a",{href:"https://github.com/youwuyou/Ginkgo.jl/blob/478bb6e996d232ecc20e817db39e9d4cd6f9e4fb/src/api.jl#L1007-L1009",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const ae=r(d,[["render",te]]);export{pe as __pageData,ae as default};
